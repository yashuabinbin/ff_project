<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lbb.dao.InvoiceInfoModelMapper" >
  <resultMap id="BaseResultMap" type="com.lbb.model.InvoiceInfoModel">
    <id column="invoice_id" property="invoiceId" jdbcType="BIGINT"/>
    <result column="contract_id" property="contractId" jdbcType="INTEGER"/>
    <result column="invoice_content" property="invoiceContent" jdbcType="VARCHAR"/>
    <result column="invoice_time" property="invoiceTime" jdbcType="TIMESTAMP"/>
    <result column="before_tax_amount" property="beforeTaxAmount" jdbcType="DECIMAL"/>
    <result column="tax_rate" property="taxRate" jdbcType="DECIMAL"/>
    <result column="deduct_amount" property="deductAmount" jdbcType="DECIMAL"/>
    <result column="remark" property="remark" jdbcType="VARCHAR"/>
    <result column="create_user_id" property="createUserId" jdbcType="INTEGER"/>
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
    <result column="last_modify_time" property="lastModifyTime" jdbcType="TIMESTAMP"/>
  </resultMap>

  <sql id="Base_Column_List">
    invoice_id, contract_id, invoice_content, invoice_time, before_tax_amount, tax_rate,
    deduct_amount, remark, create_user_id, create_time, last_modify_time
  </sql>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
    select
    <include refid="Base_Column_List"/>
    from invoice_info
    where invoice_id = #{invoiceId,jdbcType=BIGINT}
  </select>

  <select id="selectInvoiceContent" resultType="java.lang.String">
    select DISTINCT invoice_content
    from invoice_info
  </select>

  <select id="selectListByParams" parameterType="java.util.Map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from invoice_info
    where 1 = 1
    <if test="contractIdList != null">
      and contract_id in
      <foreach collection="contractIdList" item="contractId" separator="," open="(" close=")">
        #{contractId, jdbcType=INTEGER}
      </foreach>
    </if>
    <if test="invoiceStartTime != null">
      and date_format(invoice_time, '%Y-%m-%d') &gt;= date_format(#{invoiceStartTime, jdbcType=TIMESTAMP}, '%Y-%m-%d')
    </if>
    <if test="invoiceEndTime != null">
      and date_format(invoice_time, '%Y-%m-%d') &lt;= date_format(#{invoiceEndTime, jdbcType=TIMESTAMP}, '%Y-%m-%d')
    </if>
    order by invoice_id desc
  </select>

  <select id="selectListByContractId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/>
    from invoice_info
    where contract_id = #{contractId, jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete
    from invoice_info
    where invoice_id = #{invoiceId,jdbcType=BIGINT}
  </delete>

  <insert id="insert" parameterType="com.lbb.model.InvoiceInfoModel">
    insert into invoice_info (invoice_id,
                              contract_id,
                              invoice_content,
                              invoice_time,
                              before_tax_amount,
                              tax_rate,
                              deduct_amount,
                              remark,
                              create_user_id,
                              create_time,
                              last_modify_time)
    values (#{invoiceId,jdbcType=BIGINT},
            #{contractId,jdbcType=INTEGER},
            #{invoiceContent,jdbcType=VARCHAR},
            #{invoiceTime,jdbcType=TIMESTAMP},
            #{beforeTaxAmount,jdbcType=DECIMAL},
            #{taxRate,jdbcType=DECIMAL},
            #{deductAmount,jdbcType=DECIMAL},
            #{remark,jdbcType=VARCHAR},
            #{createUserId,jdbcType=INTEGER},
            #{createTime,jdbcType=TIMESTAMP},
            #{lastModifyTime,jdbcType=TIMESTAMP})
  </insert>

  <insert id="insertSelective" parameterType="com.lbb.model.InvoiceInfoModel" useGeneratedKeys="true" keyProperty="invoiceId">
    insert into invoice_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="invoiceId != null" >
        invoice_id,
      </if>
      <if test="contractId != null" >
        contract_id,
      </if>
      <if test="invoiceContent != null" >
        invoice_content,
      </if>
      <if test="invoiceTime != null" >
        invoice_time,
      </if>
      <if test="beforeTaxAmount != null" >
        before_tax_amount,
      </if>
      <if test="taxRate != null" >
        tax_rate,
      </if>
      <if test="deductAmount != null" >
        deduct_amount,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="lastModifyTime != null" >
        last_modify_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="invoiceId != null" >
        #{invoiceId,jdbcType=BIGINT},
      </if>
      <if test="contractId != null" >
        #{contractId,jdbcType=INTEGER},
      </if>
      <if test="invoiceContent != null" >
        #{invoiceContent,jdbcType=VARCHAR},
      </if>
      <if test="invoiceTime != null" >
        #{invoiceTime,jdbcType=TIMESTAMP},
      </if>
      <if test="beforeTaxAmount != null" >
        #{beforeTaxAmount,jdbcType=DECIMAL},
      </if>
      <if test="taxRate != null" >
        #{taxRate,jdbcType=DECIMAL},
      </if>
      <if test="deductAmount != null" >
        #{deductAmount,jdbcType=DECIMAL},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModifyTime != null" >
        #{lastModifyTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lbb.model.InvoiceInfoModel" >
    update invoice_info
    <set >
      <if test="contractId != null" >
        contract_id = #{contractId,jdbcType=INTEGER},
      </if>
      <if test="invoiceContent != null" >
        invoice_content = #{invoiceContent,jdbcType=VARCHAR},
      </if>
      <if test="invoiceTime != null" >
        invoice_time = #{invoiceTime,jdbcType=TIMESTAMP},
      </if>
      <if test="beforeTaxAmount != null" >
        before_tax_amount = #{beforeTaxAmount,jdbcType=DECIMAL},
      </if>
      <if test="taxRate != null" >
        tax_rate = #{taxRate,jdbcType=DECIMAL},
      </if>
      <if test="deductAmount != null" >
        deduct_amount = #{deductAmount,jdbcType=DECIMAL},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModifyTime != null" >
        last_modify_time = #{lastModifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where invoice_id = #{invoiceId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lbb.model.InvoiceInfoModel" >
    update invoice_info
    set contract_id = #{contractId,jdbcType=INTEGER},
      invoice_content = #{invoiceContent,jdbcType=VARCHAR},
      invoice_time = #{invoiceTime,jdbcType=TIMESTAMP},
      before_tax_amount = #{beforeTaxAmount,jdbcType=DECIMAL},
      tax_rate = #{taxRate,jdbcType=DECIMAL},
      deduct_amount = #{deductAmount,jdbcType=DECIMAL},
      remark = #{remark,jdbcType=VARCHAR},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      last_modify_time = #{lastModifyTime,jdbcType=TIMESTAMP}
    where invoice_id = #{invoiceId,jdbcType=BIGINT}
  </update>
</mapper>