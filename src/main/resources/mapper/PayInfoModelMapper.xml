<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lbb.dao.PayInfoModelMapper" >
  <resultMap id="BaseResultMap" type="com.lbb.model.PayInfoModel" >
    <id column="pay_id" property="payId" jdbcType="BIGINT" />
    <result column="contract_id" property="contractId" jdbcType="INTEGER" />
    <result column="payee" property="payee" jdbcType="VARCHAR" />
    <result column="pay_time" property="payTime" jdbcType="TIMESTAMP" />
    <result column="pay_amount" property="payAmount" jdbcType="DECIMAL" />
    <result column="performance_bound_amount" property="performanceBoundAmount" jdbcType="DECIMAL" />
    <result column="pay_type" property="payType" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="create_user_id" property="createUserId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="last_modify_time" property="lastModifyTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    pay_id, contract_id, payee, pay_time, pay_amount, performance_bound_amount, pay_type, 
    remark, create_user_id, create_time, last_modify_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from pay_info
    where pay_id = #{payId,jdbcType=BIGINT}
  </select>

  <select id="selectListByParams" parameterType="java.util.Map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from pay_info
    where 1 = 1
    <if test="contractIdList != null">
      and contract_id in
      <foreach collection="contractIdList" item="contractId" separator="," open="(" close=")">
        #{contractId, jdbcType=INTEGER}
      </foreach>
    </if>
    <if test="payee != null and payee != ''">
      and payee like concat('%', #{payee,jdbcType=VARCHAR},'%')
    </if>
    <if test="payType != null and payType != ''">
      and pay_type = #{payType,jdbcType=VARCHAR}
    </if>
    <if test="payStartTime != null">
      and date_format(pay_time, '%Y-%m-%d') &gt;= date_format(#{payStartTime, jdbcType=TIMESTAMP}, '%Y-%m-%d')
    </if>
    <if test="payEndTime != null">
      and date_format(pay_time, '%Y-%m-%d') &lt;= date_format(#{payEndTime, jdbcType=TIMESTAMP}, '%Y-%m-%d')
    </if>
    order by pay_id desc
  </select>

  <select id="selectPayeeList" resultType="java.lang.String">
    select distinct payee
    from pay_info
  </select>

  <select id="selectListByContractId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/>
    from pay_info
    where contract_id = #{contractId, jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from pay_info
    where pay_id = #{payId,jdbcType=BIGINT}
  </delete>

  <insert id="insert" parameterType="com.lbb.model.PayInfoModel" >
    insert into pay_info (pay_id, contract_id, payee, 
      pay_time, pay_amount, performance_bound_amount, 
      pay_type, remark, create_user_id, 
      create_time, last_modify_time)
    values (#{payId,jdbcType=BIGINT}, #{contractId,jdbcType=INTEGER}, #{payee,jdbcType=VARCHAR}, 
      #{payTime,jdbcType=TIMESTAMP}, #{payAmount,jdbcType=DECIMAL}, #{performanceBoundAmount,jdbcType=DECIMAL}, 
      #{payType,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{createUserId,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{lastModifyTime,jdbcType=TIMESTAMP})
  </insert>

  <insert id="insertSelective" parameterType="com.lbb.model.PayInfoModel" useGeneratedKeys="true" keyProperty="payId">
    insert into pay_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="payId != null" >
        pay_id,
      </if>
      <if test="contractId != null" >
        contract_id,
      </if>
      <if test="payee != null" >
        payee,
      </if>
      <if test="payTime != null" >
        pay_time,
      </if>
      <if test="payAmount != null" >
        pay_amount,
      </if>
      <if test="performanceBoundAmount != null" >
        performance_bound_amount,
      </if>
      <if test="payType != null" >
        pay_type,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="lastModifyTime != null" >
        last_modify_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="payId != null" >
        #{payId,jdbcType=BIGINT},
      </if>
      <if test="contractId != null" >
        #{contractId,jdbcType=INTEGER},
      </if>
      <if test="payee != null" >
        #{payee,jdbcType=VARCHAR},
      </if>
      <if test="payTime != null" >
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payAmount != null" >
        #{payAmount,jdbcType=DECIMAL},
      </if>
      <if test="performanceBoundAmount != null" >
        #{performanceBoundAmount,jdbcType=DECIMAL},
      </if>
      <if test="payType != null" >
        #{payType,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModifyTime != null" >
        #{lastModifyTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lbb.model.PayInfoModel" >
    update pay_info
    <set >
      <if test="contractId != null" >
        contract_id = #{contractId,jdbcType=INTEGER},
      </if>
      <if test="payee != null" >
        payee = #{payee,jdbcType=VARCHAR},
      </if>
      <if test="payTime != null" >
        pay_time = #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payAmount != null" >
        pay_amount = #{payAmount,jdbcType=DECIMAL},
      </if>
      <if test="performanceBoundAmount != null" >
        performance_bound_amount = #{performanceBoundAmount,jdbcType=DECIMAL},
      </if>
      <if test="payType != null" >
        pay_type = #{payType,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModifyTime != null" >
        last_modify_time = #{lastModifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where pay_id = #{payId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lbb.model.PayInfoModel" >
    update pay_info
    set contract_id = #{contractId,jdbcType=INTEGER},
      payee = #{payee,jdbcType=VARCHAR},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      pay_amount = #{payAmount,jdbcType=DECIMAL},
      performance_bound_amount = #{performanceBoundAmount,jdbcType=DECIMAL},
      pay_type = #{payType,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      last_modify_time = #{lastModifyTime,jdbcType=TIMESTAMP}
    where pay_id = #{payId,jdbcType=BIGINT}
  </update>
</mapper>